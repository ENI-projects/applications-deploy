stages:
  - build
  - test
  - deploy

variables:
  PROD_KUBECONFIG: prod-kubeconfig.yml
  RUNNER_IMAGE: registry.gitlab.com/startfleet/gitlab-runner:v1.1

## Templates ##
.test-template: &test-template
  stage: test
  image: $RUNNER_IMAGE
  tags:
    - startfleet

.deploy-template: &deploy-template
  stage: deploy
  image: $RUNNER_IMAGE
  when: manual
  only:
    - master
    - tags
  tags:
    - startfleet
## End Templates ##

## Stages ##
# Build
kubeconfig:
  stage: build
  script:
    - echo $KUBECONFIG | base64 -d | cat > $PROD_KUBECONFIG
  artifacts:
    paths:
    - $PROD_KUBECONFIG
  tags:
    - startfleet

test-services:
  <<: *test-template
  script:
    - export KUBECONFIG=$PROD_KUBECONFIG
    - kubectl apply -f backend/hasura-namespace/hasura/hasura-service.yml --dry-run=true
    - kubectl apply -f frontend/armadacar/service.yml --dry-run=true

test-deployments:
  <<: *test-template
  script:
    - export KUBECONFIG=$PROD_KUBECONFIG
    - kubectl apply -f backend/hasura-namespace/hasura/hasura-deployment.yml --dry-run=true
    - kubectl apply -f frontend/armadacar/deployment.yml --dry-run=true

test-ingress:
  <<: *test-template
  script:
    - export KUBECONFIG=$PROD_KUBECONFIG
    - kubectl apply -f frontend/armadacar/ingress.yml --dry-run=true

# Deploy
deploy-hasura:
  <<: *deploy-template
  script:
    - export KUBECONFIG=$PROD_KUBECONFIG
    # deploying the deployment with substrings 
    - envsubst < backend/hasura-namespace/hasura/hasura-deployment.yml > Hasura-Deployment.yml
    - kubectl -n hasura apply -f Hasura-Deployment.yml
    # deploying hasura service
    - kubectl -n hasura apply -f backend/hasura-namespace/hasura/hasura-service.yml

deploy-armadacar:
  <<: *deploy-template
  script:
    - export KUBECONFIG=$PROD_KUBECONFIG
    - kubectl -n armadacar apply -f frontend/armadacar/deployment.yml
    # Creating armadacar service
    - kubectl -n armadacar apply -f frontend/armadacar/service.yml
    # Exposing the app via the ingress
    - kubectl -n armadacar apply -f frontend/armadacar/ingress.yml